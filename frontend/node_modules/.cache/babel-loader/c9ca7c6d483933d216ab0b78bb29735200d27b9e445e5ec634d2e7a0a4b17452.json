{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peuli\\\\Downloads\\\\fullstack-todo-app-dist\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  isAuthenticated: false,\n  user: null,\n  token: null,\n  loading: true,\n  login: () => {},\n  logout: () => {}\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Verificar se há token no localStorage\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = (token, user) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    setToken(token);\n    setUser(user);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setToken(null);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated: !!token,\n      user,\n      token,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"uAkFQMmIUxfxJcQTEb8tCM/KFt4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","isAuthenticated","user","token","loading","login","logout","AuthProvider","children","_s","setUser","setToken","setLoading","storedToken","localStorage","getItem","storedUser","JSON","parse","setItem","stringify","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/peuli/Downloads/fullstack-todo-app-dist/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode } from 'react';\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  user: User | null;\n  token: string | null;\n  loading: boolean;\n  login: (token: string, user: User) => void;\n  logout: () => void;\n}\n\ninterface User {\n  _id: string;\n  name: string;\n  email: string;\n}\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthContext = createContext<AuthContextType>({\n  isAuthenticated: false,\n  user: null,\n  token: null,\n  loading: true,\n  login: () => {},\n  logout: () => {}\n});\n\nexport const AuthProvider = ({ children }: AuthProviderProps) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Verificar se há token no localStorage\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n\n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(JSON.parse(storedUser));\n    }\n    \n    setLoading(false);\n  }, []);\n\n  const login = (token: string, user: User) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    setToken(token);\n    setUser(user);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setToken(null);\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated: !!token,\n        user,\n        token,\n        loading,\n        login,\n        logout\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAqB7E,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAkB;EACxDM,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAEA,CAAA,KAAM,CAAC,CAAC;EACfC,MAAM,EAAEA,CAAA,KAAM,CAAC;AACjB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAA4B,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACP,IAAI,EAAEQ,OAAO,CAAC,GAAGd,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACO,KAAK,EAAEQ,QAAQ,CAAC,GAAGf,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACQ,OAAO,EAAEQ,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE/C,IAAIF,WAAW,IAAIG,UAAU,EAAE;MAC7BL,QAAQ,CAACE,WAAW,CAAC;MACrBH,OAAO,CAACO,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,CAAC;IACjC;IAEAJ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMP,KAAK,GAAGA,CAACF,KAAa,EAAED,IAAU,KAAK;IAC3CY,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEhB,KAAK,CAAC;IACpCW,YAAY,CAACK,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAAClB,IAAI,CAAC,CAAC;IAClDS,QAAQ,CAACR,KAAK,CAAC;IACfO,OAAO,CAACR,IAAI,CAAC;EACf,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBQ,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/BV,QAAQ,CAAC,IAAI,CAAC;IACdD,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAACsB,QAAQ;IACnBC,KAAK,EAAE;MACLtB,eAAe,EAAE,CAAC,CAACE,KAAK;MACxBD,IAAI;MACJC,KAAK;MACLC,OAAO;MACPC,KAAK;MACLC;IACF,CAAE;IAAAE,QAAA,EAEDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,EAAA,CA9CWF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}