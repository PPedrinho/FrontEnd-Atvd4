{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peuli\\\\Downloads\\\\fullstack-todo-app-dist\\\\frontend\\\\src\\\\components\\\\PrivateRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    loading\n  } = useContext(AuthContext);\n  const location = useLocation();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isAuthenticated) {\n    // Redirecionar para login se não estiver autenticado\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(PrivateRoute, \"fY3v1+0TItfhUajJqQZT3+gcSos=\", false, function () {\n  return [useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useContext","AuthContext","jsxDEV","_jsxDEV","PrivateRoute","children","_s","isAuthenticated","loading","location","className","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","_c","$RefreshReg$"],"sources":["C:/Users/peuli/Downloads/fullstack-todo-app-dist/frontend/src/components/PrivateRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\n\ninterface PrivateRouteProps {\n  children: JSX.Element;\n}\n\nconst PrivateRoute = ({ children }: PrivateRouteProps) => {\n  const { isAuthenticated, loading } = useContext(AuthContext);\n  const location = useLocation();\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Carregando...</p>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    // Redirecionar para login se não estiver autenticado\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  return children;\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMrD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAA4B,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM;IAAEC,eAAe;IAAEC;EAAQ,CAAC,GAAGR,UAAU,CAACC,WAAW,CAAC;EAC5D,MAAMQ,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,IAAIS,OAAO,EAAE;IACX,oBACEL,OAAA;MAAKO,SAAS,EAAC,mBAAmB;MAAAL,QAAA,gBAChCF,OAAA;QAAKO,SAAS,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvCX,OAAA;QAAAE,QAAA,EAAG;MAAa;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;EAEA,IAAI,CAACP,eAAe,EAAE;IACpB;IACA,oBAAOJ,OAAA,CAACL,QAAQ;MAACiB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAER;MAAS,CAAE;MAACS,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;EAEA,OAAOT,QAAQ;AACjB,CAAC;AAACC,EAAA,CAnBIF,YAAY;EAAA,QAECL,WAAW;AAAA;AAAAoB,EAAA,GAFxBf,YAAY;AAqBlB,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}